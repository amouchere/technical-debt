<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Technical Debt</title>
  
  
  <link href="https://amouchere.github.io/technical-debt/atom.xml" rel="self"/>
  
  <link href="https://amouchere.github.io/technical-debt/"/>
  <updated>2022-08-03T21:19:53.603Z</updated>
  <id>https://amouchere.github.io/technical-debt/</id>
  
  <author>
    <name>Antoine BZH</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>I2C Screen sur ESP8266</title>
    <link href="https://amouchere.github.io/technical-debt/2021/01/08/I2C-Screen-sur-ESP8266/"/>
    <id>https://amouchere.github.io/technical-debt/2021/01/08/I2C-Screen-sur-ESP8266/</id>
    <published>2021-01-08T21:12:36.000Z</published>
    <updated>2022-08-03T21:19:53.603Z</updated>
    
    <content type="html"><![CDATA[<p>Le but du tutoriel est de d’afficher des données sur un écran I2C LCD avec un ESP32 (Compatible ESP8266).</p><h1 id="Les-composants"><a href="#Les-composants" class="headerlink" title="Les composants"></a>Les composants</h1><ul><li>L’écran LCD utilisé est un 20X4 mais il existe aussi des afficheurs plus petit au format 16x2. Un potentiomètre à l’arrière de l’écran permet de regler la luminosité de l’écran. </li></ul><p><img src="./lcd.jpg" alt="LCD"><br><img src="./lcd_2.jpg" alt="LCD Vue arrière"></p><ul><li>L’ESP est un ESP8266.</li></ul><p><img src="./esp8266.jpg" alt="ESP8266"></p><ul><li>Des cables femelle-femelle ou bien mâle-femelle et une plaque de montage. </li></ul><h1 id="Le-montage"><a href="#Le-montage" class="headerlink" title="Le montage"></a>Le montage</h1><p>L’écran utilisant une communication de type I2C le montage est assez simple. </p><p>4 Pins côtés écrans à branché sur l’esp: </p><ul><li>GND -&gt; Sur une pin Gnd de l’arduino</li><li>VCC -&gt; Pour alimenter l’écran, à brancher sur la pin VIN. (Sur l’esp8266, j’ai du faire le branchement sur la pin 3V)</li><li>SDA -&gt; GPIO 4 (pin D2)</li><li>SCL -&gt; GPIO 5 (pin D1)</li></ul><p><img src="./circuit_schema.png" alt="résultat"></p><h1 id="Le-code"><a href="#Le-code" class="headerlink" title="Le code"></a>Le code</h1><h2 id="Adresse-du-LCD"><a href="#Adresse-du-LCD" class="headerlink" title="Adresse du LCD"></a>Adresse du LCD</h2><p>Pour communiquer avec l’écran LCD, il faut retrouver l’adresse de l’écran et le fournir ensuite à l’esp.<br>Le code ci-dessous permet de retrouver cette adresse qui s’affichera dans le moniteur série. </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Wire.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  Wire.begin();</span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;\nI2C Scanner&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  byte error, address;</span><br><span class="line">  <span class="keyword">int</span> nDevices;</span><br><span class="line">  Serial.println(<span class="string">&quot;Scanning...&quot;</span>);</span><br><span class="line">  nDevices = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(address = <span class="number">1</span>; address &lt; <span class="number">127</span>; address++ ) &#123;</span><br><span class="line">    Wire.beginTransmission(address);</span><br><span class="line">    error = Wire.endTransmission();</span><br><span class="line">    <span class="keyword">if</span> (error == <span class="number">0</span>) &#123;</span><br><span class="line">      Serial.print(<span class="string">&quot;I2C device found at address 0x&quot;</span>);</span><br><span class="line">      <span class="keyword">if</span> (address&lt;<span class="number">16</span>) &#123;</span><br><span class="line">        Serial.print(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      Serial.println(address,HEX);</span><br><span class="line">      nDevices++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (error==<span class="number">4</span>) &#123;</span><br><span class="line">      Serial.print(<span class="string">&quot;Unknow error at address 0x&quot;</span>);</span><br><span class="line">      <span class="keyword">if</span> (address&lt;<span class="number">16</span>) &#123;</span><br><span class="line">        Serial.print(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      Serial.println(address,HEX);</span><br><span class="line">    &#125;    </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (nDevices == <span class="number">0</span>) &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;No I2C devices found\n&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;done\n&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  delay(<span class="number">5000</span>);          </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="LiquidCrystal-I2C"><a href="#LiquidCrystal-I2C" class="headerlink" title="LiquidCrystal_I2C"></a>LiquidCrystal_I2C</h2><p>La librairie LiquidCrystal_I2C permet de piloter facilement les écrans LCD I2C. </p><ul><li>Télécharger la librairie <a href="https://github.com/marcoschwartz/LiquidCrystal_I2C/archive/master.zip">LiquidCrystal_I2C</a></li><li>Unzip et renommer LiquidCrystal_I2C-master en LiquidCrystal_I2C.</li><li>Déplacer le répertoire LiquidCrystal_I2C dans le répertoire des librairies de l’IDE Arduino.</li><li>Relancer l’IDE</li></ul><p><img src="./Arduino_IDE.PNG" alt="Ajout de la librairie LiquidCrystal_I2C"></p><h1 id="Affichage-de-texte"><a href="#Affichage-de-texte" class="headerlink" title="Affichage de texte"></a>Affichage de texte</h1><p>Le code ci-dessous permet d’initialiser la librairie (taille et adresse de l’écran puis d’afficher un texte basique à l’écran)</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;LiquidCrystal_I2C.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// définir la taille de l&#x27;écran (16x2 20x4 ..) </span></span><br><span class="line"><span class="keyword">int</span> lcdColumns = <span class="number">20</span>;</span><br><span class="line"><span class="keyword">int</span> lcdRows = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">int</span> adress = <span class="number">0x27</span> ;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Fournir à la librairie la taille de l&#x27;écran et son adresse. </span></span><br><span class="line"><span class="function">LiquidCrystal_I2C <span class="title">lcd</span><span class="params">(adress, lcdColumns, lcdRows)</span></span>;  </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span></span>&#123;</span><br><span class="line">  Serial.begin(<span class="number">115200</span>);</span><br><span class="line">  Serial.println(<span class="string">&quot;\nI2C LCD Initialisation&quot;</span>);</span><br><span class="line">  <span class="comment">// Initialiser l&#x27;afficheur</span></span><br><span class="line">  lcd.init(); </span><br><span class="line">  <span class="comment">//  Allumer l&#x27;afficheur                  </span></span><br><span class="line">  lcd.backlight();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="comment">// placer le curseur sur la première ligne et première colonne. </span></span><br><span class="line">  lcd.setCursor(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">  lcd.print(<span class="string">&quot;Hello, World&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>D’autres fonctions sont fournies par la librairie. </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Vider l&#x27;afficheur</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Eteindre l&#x27;afficheur</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">noBacklight</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  Allumer l&#x27;afficheur                  </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">backlight</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Et d&#x27;autres ...</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">home</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">noDisplay</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">noBlink</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">blink</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">noCursor</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cursor</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">scrollDisplayLeft</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">scrollDisplayRight</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printLeft</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printRight</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">leftToRight</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rightToLeft</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">shiftIncrement</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">shiftDecrement</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">noBacklight</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">backlight</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">autoscroll</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">noAutoscroll</span><span class="params">()</span></span>; </span><br></pre></td></tr></table></figure><p>Il est aussi possible d’afficher des caractères customisables. </p><p>Il faut retranscrire le caractère en un tableau de bytes. Un outils en ligne existe pour les générer sur ce <a href="https://omerk.github.io/lcdchargen/">site</a>.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">byte heart[<span class="number">8</span>] = &#123;</span><br><span class="line">  <span class="number">0b00000</span>,</span><br><span class="line">  <span class="number">0b01010</span>,</span><br><span class="line">  <span class="number">0b11111</span>,</span><br><span class="line">  <span class="number">0b11111</span>,</span><br><span class="line">  <span class="number">0b11111</span>,</span><br><span class="line">  <span class="number">0b01110</span>,</span><br><span class="line">  <span class="number">0b00100</span>,</span><br><span class="line">  <span class="number">0b00000</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span></span>&#123;</span><br><span class="line">  ...</span><br><span class="line">  <span class="comment">// Création du caractère à partir du tableau de bytes. Et affectation de ce caractère à la variable 0.</span></span><br><span class="line">  lcd.createChar(<span class="number">0</span>, heart);</span><br><span class="line">  </span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span></span>&#123;</span><br><span class="line"> ....</span><br><span class="line"> <span class="comment">// Affichage du caractères en utilsant la variable 0</span></span><br><span class="line">  lcd.write(<span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>et voilà : </p><p><img src="./demo.jpg" alt="résultat"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Le but du tutoriel est de d’afficher des données sur un écran I2C LCD avec un ESP32 (Compatible ESP8266).&lt;/p&gt;
&lt;h1 id=&quot;Les-composants&quot;&gt;&lt;a </summary>
      
    
    
    
    
    <category term="arduino" scheme="https://amouchere.github.io/technical-debt/tags/arduino/"/>
    
  </entry>
  
  <entry>
    <title>RPM commandes</title>
    <link href="https://amouchere.github.io/technical-debt/2020/12/09/commandeRPM/"/>
    <id>https://amouchere.github.io/technical-debt/2020/12/09/commandeRPM/</id>
    <published>2020-12-09T20:56:52.000Z</published>
    <updated>2022-08-03T21:19:53.611Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Installation-d’un-RPM"><a href="#Installation-d’un-RPM" class="headerlink" title="Installation d’un RPM"></a>Installation d’un RPM</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh &#x2F;packagename.rpm</span><br></pre></td></tr></table></figure><ul><li>i pour installation</li><li>vh pour le mode verbose </li></ul><h2 id="Requeter-son-RPM"><a href="#Requeter-son-RPM" class="headerlink" title="Requêter son RPM"></a>Requêter son RPM</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo rpm -qa</span><br><span class="line"># peut être un peu verbeux ..</span><br><span class="line"></span><br><span class="line">sudo rpm -qa | grep -i packagename</span><br></pre></td></tr></table></figure><h2 id="Supprimer-un-package-RPM"><a href="#Supprimer-un-package-RPM" class="headerlink" title="Supprimer un package RPM"></a>Supprimer un package RPM</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -e &lt;package name&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Installation-d’un-RPM&quot;&gt;&lt;a href=&quot;#Installation-d’un-RPM&quot; class=&quot;headerlink&quot; title=&quot;Installation d’un RPM&quot;&gt;&lt;/a&gt;Installation d’un RPM&lt;/</summary>
      
    
    
    
    
    <category term="Linux" scheme="https://amouchere.github.io/technical-debt/tags/Linux/"/>
    
    <category term="RPM" scheme="https://amouchere.github.io/technical-debt/tags/RPM/"/>
    
  </entry>
  
  <entry>
    <title>Monitoring de température</title>
    <link href="https://amouchere.github.io/technical-debt/2020/11/28/monitoringTemperatureESP8266/"/>
    <id>https://amouchere.github.io/technical-debt/2020/11/28/monitoringTemperatureESP8266/</id>
    <published>2020-11-28T14:47:30.000Z</published>
    <updated>2022-08-03T21:19:53.611Z</updated>
    
    <content type="html"><![CDATA[<p>L’<a href="https://fr.wikipedia.org/wiki/ESP8266">ESP8266</a> est un circuit intégré à microcontrôleur avec connexion Wi-Fi développé par le fabricant chinois Espressif. </p><p>Il est ici utilisé avec un capteur de température et d’humidité DHT22 (ou AM2302).</p><h1 id="Montage"><a href="#Montage" class="headerlink" title="Montage"></a>Montage</h1><p><img src="./photo1.jpg" alt="Esp8266"></p><p><img src="./photo2.jpg" alt="DHT22"></p><ul><li>La pin - de la sonde sur une pin Ground de l’esp.  </li><li>La pin + de la sonde sur une pin 3V de l’esp.  </li><li>La pin du milieu sur l’une des pin d1 de l’esp. Il faudra réutiliser le même numéro de pin dans le code ci-dessous. </li></ul><h1 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h1><p>Dans ArduinoIDE, utiliser le type de carte esp8266 &gt;NodeMCU 0.9.</p><blockquote><p>Penser aussi à charger les cartes et librairies esp8266: <a href="https://arduino.esp8266.com/stable/package_esp8266com_index.json">https://arduino.esp8266.com/stable/package_esp8266com_index.json</a></p></blockquote><p>Plus d’info <a href="https://projetsdiy.fr/programmer-esp8266-ide-arduino-librairies-gpio-web-serveur-client/">ici</a> </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Arduino.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ESP8266WiFi.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ESP8266WiFiMulti.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ESP8266HTTPClient.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;WiFiClient.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;DHT.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DHTTYPE DHT22</span></span><br><span class="line"></span><br><span class="line">ESP8266WiFiMulti WiFiMulti;</span><br><span class="line"></span><br><span class="line"><span class="comment">// DHT Sensor</span></span><br><span class="line"><span class="keyword">uint8_t</span> DHTPin = D1;</span><br><span class="line"><span class="comment">// Initialize DHT sensor.</span></span><br><span class="line"><span class="function">DHT <span class="title">dht</span><span class="params">(DHTPin, DHTTYPE)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">float</span> temperature;</span><br><span class="line"><span class="keyword">float</span> humidity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> String location = <span class="string">&quot;bureau_rdc&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* ssid = <span class="string">&quot;Livebox-*****&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* password = <span class="string">&quot;crAzYpssWD&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> delayInMin = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setup</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  Serial.begin(<span class="number">9600</span>);</span><br><span class="line">  <span class="comment">// Serial.setDebugOutput(true);</span></span><br><span class="line"></span><br><span class="line">  Serial.println();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">uint8_t</span> t = <span class="number">10</span>; t &gt; <span class="number">0</span>; t--) &#123;</span><br><span class="line">    Serial.<span class="built_in">printf</span>(<span class="string">&quot;[SETUP] WAIT %d...\n&quot;</span>, t);</span><br><span class="line">    Serial.flush();</span><br><span class="line">    delay(<span class="number">1000</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  WiFi.mode(WIFI_STA);</span><br><span class="line">  WiFiMulti.addAP(ssid, password);</span><br><span class="line"></span><br><span class="line">  pinMode(DHTPin, INPUT);</span><br><span class="line">  dht.begin();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// wait for WiFi connection</span></span><br><span class="line">  <span class="keyword">if</span> ((WiFiMulti.run() == WL_CONNECTED)) &#123;</span><br><span class="line"></span><br><span class="line">    temperature = dht.readTemperature(); <span class="comment">// Gets the values of the temperature</span></span><br><span class="line">    humidity = dht.readHumidity(); <span class="comment">// Gets the values of the humidity</span></span><br><span class="line"></span><br><span class="line">    HTTPClient http;</span><br><span class="line">    Serial.print(<span class="string">&quot;[HTTP] begin...\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    String url = <span class="string">&quot;http://192.168.1.21:5000/&quot;</span>;</span><br><span class="line">    String postData = <span class="string">&quot;&#123;\&quot;temperature\&quot;: \&quot;&quot;</span> + String(temperature) + <span class="string">&quot;\&quot; , \&quot;humidity\&quot;: \&quot;&quot;</span> + String(humidity) + <span class="string">&quot;\&quot;, \&quot;location\&quot;: \&quot;&quot;</span> + location + <span class="string">&quot;\&quot;&#125;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    Serial.print(<span class="string">&quot;Requesting url: &quot;</span>);</span><br><span class="line">    Serial.println(url);</span><br><span class="line">    Serial.println(postData);</span><br><span class="line">    </span><br><span class="line">    http.begin(url);</span><br><span class="line">    http.addHeader(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> httpCode = http.POST(postData);</span><br><span class="line">    Serial.println(httpCode);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (httpCode &lt; <span class="number">0</span>) &#123;</span><br><span class="line">      Serial.<span class="built_in">printf</span>(<span class="string">&quot;[HTTP] POST... failed, error: %s\n&quot;</span>, http.errorToString(httpCode).c_str());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    http.end(); <span class="comment">//Close connection Serial.println();</span></span><br><span class="line">    Serial.println(<span class="string">&quot;closing connection&quot;</span>);</span><br><span class="line"></span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    Serial.println(<span class="string">&quot;Error in WiFi connection&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  delay(delayInMin * <span class="number">1000</span> * <span class="number">60</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Ce code permet de récupérer les données de température et d’humidité puis de les envoyer via HTTP sur un serveur distant. </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;L’&lt;a href=&quot;https://fr.wikipedia.org/wiki/ESP8266&quot;&gt;ESP8266&lt;/a&gt; est un circuit intégré à microcontrôleur avec connexion Wi-Fi développé par</summary>
      
    
    
    
    
    <category term="DIY" scheme="https://amouchere.github.io/technical-debt/tags/DIY/"/>
    
    <category term="ESP8266" scheme="https://amouchere.github.io/technical-debt/tags/ESP8266/"/>
    
    <category term="DHT22" scheme="https://amouchere.github.io/technical-debt/tags/DHT22/"/>
    
  </entry>
  
  <entry>
    <title>Disk Usage</title>
    <link href="https://amouchere.github.io/technical-debt/2018/12/24/diskusage/"/>
    <id>https://amouchere.github.io/technical-debt/2018/12/24/diskusage/</id>
    <published>2018-12-24T13:25:53.000Z</published>
    <updated>2022-08-03T21:19:53.611Z</updated>
    
    <content type="html"><![CDATA[<p>Afficher l’usage disque du répertoire courant (human readable &amp; trié) :</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">du -sch * | sort -h</span><br></pre></td></tr></table></figure><p>Pour inclure les dossiers cachés: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">du -sch * .* | sort -h</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Afficher l’usage disque du répertoire courant (human readable &amp;amp; trié) :&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut</summary>
      
    
    
    
    
    <category term="Linux" scheme="https://amouchere.github.io/technical-debt/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>ssh via rebond</title>
    <link href="https://amouchere.github.io/technical-debt/2018/10/24/ssh-via-rebond/"/>
    <id>https://amouchere.github.io/technical-debt/2018/10/24/ssh-via-rebond/</id>
    <published>2018-10-24T15:27:31.000Z</published>
    <updated>2022-08-03T21:19:53.615Z</updated>
    
    <content type="html"><![CDATA[<p>Modifier le fichier config dans son répertoire SSH perso.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi ~&#x2F;.ssh&#x2F;config</span><br></pre></td></tr></table></figure><p>Préciser une liste de Host / Hostname / User</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Host myAlias</span><br><span class="line">  Hostname &lt;IP Cible derriere le rebond&gt;</span><br><span class="line">  Port 22</span><br><span class="line">  User &lt;User cible&gt;</span><br><span class="line">  ProxyCommand ssh &lt;userRebond&gt;@&lt;IP Rebond&gt; -W %h:%p</span><br></pre></td></tr></table></figure><p>Pour se connecter</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh myAlias</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Modifier le fichier config dans son répertoire SSH perso.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span cl</summary>
      
    
    
    
    
    <category term="Linux" scheme="https://amouchere.github.io/technical-debt/tags/Linux/"/>
    
    <category term="SSH" scheme="https://amouchere.github.io/technical-debt/tags/SSH/"/>
    
  </entry>
  
  <entry>
    <title>Crontab basics</title>
    <link href="https://amouchere.github.io/technical-debt/2018/10/16/Crontab-basics/"/>
    <id>https://amouchere.github.io/technical-debt/2018/10/16/Crontab-basics/</id>
    <published>2018-10-16T11:25:50.000Z</published>
    <updated>2022-08-03T21:19:53.599Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Principales-commandes"><a href="#Principales-commandes" class="headerlink" title="Principales commandes"></a>Principales commandes</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">crontab [-u user] -l    <span class="comment">## Liste les jobs pour l&#x27;utilisateur</span></span><br><span class="line">crontab [-u user] -e    <span class="comment">## Edite les jobs pour l&#x27;utilisateur</span></span><br><span class="line">crontab [-u user] -r    <span class="comment">## Supprime les jobs pour l&#x27;utilisateur</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Files"><a href="#Files" class="headerlink" title="Files"></a>Files</h2><p>Un fichier est créé par table CRON (1 par user) dans /var/spool/cron/crontabs  (accessible en root)</p><h2 id="CRON"><a href="#CRON" class="headerlink" title="CRON"></a>CRON</h2><p>minute     0-59<br>hour     0-23<br>day of month     1-31<br>month     1-12<br>day of week     0-7 (0 or 7 is Sunday)  </p><p>-&gt; <a href="https://crontab.guru/">https://crontab.guru</a></p><h2 id="Logs"><a href="#Logs" class="headerlink" title="Logs"></a>Logs</h2><p>Pour activer les logs des job CRON (sortie standard)</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/rsyslog.conf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Décommenter ou ajouter la ligne:  </span></span><br><span class="line">cron.*     /var/<span class="built_in">log</span>/cron.log</span><br></pre></td></tr></table></figure><p>Redémarrer rsyslog:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/rsyslog restart</span><br></pre></td></tr></table></figure><p>Les logs sont dans<br><strong>/var/log/cron.log</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Principales-commandes&quot;&gt;&lt;a href=&quot;#Principales-commandes&quot; class=&quot;headerlink&quot; title=&quot;Principales commandes&quot;&gt;&lt;/a&gt;Principales commandes&lt;/</summary>
      
    
    
    
    
    <category term="Linux" scheme="https://amouchere.github.io/technical-debt/tags/Linux/"/>
    
    <category term="CRON" scheme="https://amouchere.github.io/technical-debt/tags/CRON/"/>
    
    <category term="Shell" scheme="https://amouchere.github.io/technical-debt/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>CXF OneWay method</title>
    <link href="https://amouchere.github.io/technical-debt/2018/06/26/CXF-OneWay-method/"/>
    <id>https://amouchere.github.io/technical-debt/2018/06/26/CXF-OneWay-method/</id>
    <published>2018-06-26T10:13:42.000Z</published>
    <updated>2022-08-03T21:19:53.599Z</updated>
    
    <content type="html"><![CDATA[<p>Un consumer SOAP par défaut fonctionne de manière synchrone.</p><p>Pour consommer une API de façon asynchrone, l’interceptor qui gère la réponse doit être configurée.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CxfClientConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;endpoint.url&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String endpointUrl;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> HwfServerPortType <span class="title">asyncClient</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> JaxWsProxyFactoryBean factory = <span class="keyword">new</span> JaxWsProxyFactoryBean();</span><br><span class="line">        factory.setAddress(endpointUrl);</span><br><span class="line">        factory.setServiceClass(HwfServerPortType.class);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//Logging interceptor IN/OUT</span></span><br><span class="line">        factory.getInInterceptors().add(<span class="keyword">new</span> LoggingInInterceptor());</span><br><span class="line">        factory.getOutInterceptors().add(<span class="keyword">new</span> LoggingOutInterceptor());</span><br><span class="line"></span><br><span class="line">        factory.getOutInterceptors().add(<span class="keyword">new</span> AsyncInterceptor());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> (HwfServerPortType) factory.create();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * For OneWay SOAP method (no return is expected)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">AsyncInterceptor</span> <span class="keyword">extends</span> <span class="title">AbstractSoapInterceptor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        AsyncInterceptor() &#123;</span><br><span class="line">            <span class="keyword">super</span>(Phase.SETUP);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(<span class="keyword">final</span> SoapMessage message)</span> <span class="keyword">throws</span> Fault </span>&#123;</span><br><span class="line">            message.getExchange().setSynchronous(<span class="keyword">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Cet AsyncInterceptor permet également de traiter les méthodes SOAP n’attendant aucune réponse. (@OneWay) évitant ainsi des erreurs</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">java.net.SocketException: Unexpected end of file from server</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">Caused by: java.net.SocketException: Unexpected end of file from server</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Un consumer SOAP par défaut fonctionne de manière synchrone.&lt;/p&gt;
&lt;p&gt;Pour consommer une API de façon asynchrone, l’interceptor qui gère la</summary>
      
    
    
    
    
    <category term="Java" scheme="https://amouchere.github.io/technical-debt/tags/Java/"/>
    
    <category term="Spring" scheme="https://amouchere.github.io/technical-debt/tags/Spring/"/>
    
    <category term="CXF" scheme="https://amouchere.github.io/technical-debt/tags/CXF/"/>
    
  </entry>
  
  <entry>
    <title>Log Request Filter for Spring application</title>
    <link href="https://amouchere.github.io/technical-debt/2018/02/09/Log-Request-Filter-for-Spring-application/"/>
    <id>https://amouchere.github.io/technical-debt/2018/02/09/Log-Request-Filter-for-Spring-application/</id>
    <published>2018-02-09T16:25:39.000Z</published>
    <updated>2022-08-03T21:19:53.611Z</updated>
    
    <content type="html"><![CDATA[<p>Pour logguer les requêtes HTTP entrantes, Spring fournit des outils “out of the box”.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> CommonsRequestLoggingFilter <span class="title">requestLoggingFilter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    CommonsRequestLoggingFilter loggingFilter = <span class="keyword">new</span> CommonsRequestLoggingFilter();</span><br><span class="line">    loggingFilter.setIncludeClientInfo(<span class="keyword">true</span>);</span><br><span class="line">    loggingFilter.setIncludeQueryString(<span class="keyword">true</span>);</span><br><span class="line">    loggingFilter.setIncludePayload(<span class="keyword">true</span>);</span><br><span class="line">    <span class="keyword">return</span> loggingFilter;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Un peu de configuration logback aussi</span></span><br><span class="line">logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG.</span><br></pre></td></tr></table></figure><p>Et les requetes entrantes sont logguées… mais tout ca n’est pas très personnalisable.  </p><p>On peut aussi passer par un interceptor HTTP ou un filtre de requêtes.</p><p>En voici une implémentation pour logguer les requêtes mais aussi les réponses. En bonus les paramètres de requêtes, le status HTTP, et pourquoi les header …</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintStream;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.util.LinkedHashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterChain;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletOutputStream;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponseWrapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.io.output.TeeOutputStream;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.Ordered;</span><br><span class="line"><span class="keyword">import</span> org.springframework.mock.web.DelegatingServletOutputStream;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.filter.OncePerRequestFilter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.util.ContentCachingRequestWrapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.util.WebUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * A filter which logs http request and response</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LogRequestFilter</span> <span class="keyword">extends</span> <span class="title">OncePerRequestFilter</span> <span class="keyword">implements</span> <span class="title">Ordered</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Ordered.LOWEST_PRECEDENCE - <span class="number">8</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doFilterInternal</span><span class="params">(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        ByteArrayOutputStream baos = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        <span class="keyword">final</span> PrintStream ps = <span class="keyword">new</span> PrintStream(baos);</span><br><span class="line"></span><br><span class="line">        ContentCachingRequestWrapper wrappedRequest = <span class="keyword">new</span> ContentCachingRequestWrapper(request);</span><br><span class="line">        <span class="keyword">final</span> ResponseWrapper wrappedResponse = <span class="keyword">new</span> ResponseWrapper(response, ps);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// pass through filter chain to do the actual request handling</span></span><br><span class="line">        filterChain.doFilter(wrappedRequest, wrappedResponse);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// body can only be read after the actual request handling was done!</span></span><br><span class="line">        logRequest(wrappedRequest);</span><br><span class="line">        logResponse(response, baos);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">logResponse</span><span class="params">(HttpServletResponse httpResp, ByteArrayOutputStream baos)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, Object&gt; trace = <span class="keyword">new</span> LinkedHashMap&lt;&gt;();</span><br><span class="line">        trace.put(<span class="string">&quot;status&quot;</span>, httpResp.getStatus());</span><br><span class="line">        trace.put(<span class="string">&quot;body&quot;</span>, baos.toString());</span><br><span class="line">        log.debug(String.format(<span class="string">&quot;Response trace &#x27;%s&#x27;&quot;</span>, trace));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">logRequest</span><span class="params">(ContentCachingRequestWrapper request)</span> </span>&#123;</span><br><span class="line">        Map&lt;String, Object&gt; trace = <span class="keyword">new</span> LinkedHashMap&lt;&gt;();</span><br><span class="line">        trace.put(<span class="string">&quot;method&quot;</span>, request.getMethod());</span><br><span class="line">        trace.put(<span class="string">&quot;path&quot;</span>, request.getRequestURI());</span><br><span class="line">        trace.put(<span class="string">&quot;query&quot;</span>, request.getQueryString());</span><br><span class="line">        trace.put(<span class="string">&quot;body&quot;</span>, getBody(request));</span><br><span class="line">        log.debug(String.format(<span class="string">&quot;Request trace &#x27;%s&#x27;&quot;</span>, trace));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">getBody</span><span class="params">(ContentCachingRequestWrapper request)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// wrap request to make sure we can read the body of the request (otherwise it will be consumed by the actual request handler)</span></span><br><span class="line">        ContentCachingRequestWrapper wrapper = WebUtils.getNativeRequest(request, ContentCachingRequestWrapper.class);</span><br><span class="line"></span><br><span class="line">        String body = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (wrapper != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">byte</span>[] buf = wrapper.getContentAsByteArray();</span><br><span class="line">            <span class="keyword">if</span> (buf.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    body = <span class="keyword">new</span> String(buf, <span class="number">0</span>, buf.length, wrapper.getCharacterEncoding());</span><br><span class="line">                &#125; <span class="keyword">catch</span> (UnsupportedEncodingException ex) &#123;</span><br><span class="line">                    body = <span class="string">&quot;[unknown]&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> body;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Inner class to wrap HttpResponse in order to print response body</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">ResponseWrapper</span> <span class="keyword">extends</span> <span class="title">HttpServletResponseWrapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> PrintStream ps;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * Constructs a response adaptor wrapping the given response.</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> response The response to be wrapped</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@throws</span> IllegalArgumentException if the response is null</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        ResponseWrapper(<span class="keyword">final</span> HttpServletResponse response, <span class="keyword">final</span> PrintStream ps) &#123;</span><br><span class="line">            <span class="keyword">super</span>(response);</span><br><span class="line">            <span class="keyword">this</span>.ps = ps;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> ServletOutputStream <span class="title">getOutputStream</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> DelegatingServletOutputStream(<span class="keyword">new</span> TeeOutputStream(<span class="keyword">super</span>.getOutputStream(), ps));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> PrintWriter <span class="title">getWriter</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> PrintWriter(<span class="keyword">new</span> DelegatingServletOutputStream(<span class="keyword">new</span> TeeOutputStream(<span class="keyword">super</span>.getOutputStream(), ps)));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Pour logguer les requêtes HTTP entrantes, Spring fournit des outils “out of the box”.&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td c</summary>
      
    
    
    
    
    <category term="Java" scheme="https://amouchere.github.io/technical-debt/tags/Java/"/>
    
    <category term="SPRING" scheme="https://amouchere.github.io/technical-debt/tags/SPRING/"/>
    
  </entry>
  
  <entry>
    <title>HTTP interceptor With SpringBoot</title>
    <link href="https://amouchere.github.io/technical-debt/2018/02/09/HTTP-interceptor-With-SpringBoot/"/>
    <id>https://amouchere.github.io/technical-debt/2018/02/09/HTTP-interceptor-With-SpringBoot/</id>
    <published>2018-02-09T15:18:20.000Z</published>
    <updated>2022-08-03T21:19:53.603Z</updated>
    
    <content type="html"><![CDATA[<p>Le but de ces bouts de code est l’ajout d’un interceptor HTTP dans une application SpringBoot.</p><h2 id="Creation-de-l’interceptor"><a href="#Creation-de-l’interceptor" class="headerlink" title="Création de l’interceptor"></a>Création de l’interceptor</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RequestInterceptor</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object object)</span></span></span><br><span class="line"><span class="function">              <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">      <span class="comment">// Something to do ?</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">postHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object object,</span></span></span><br><span class="line"><span class="function"><span class="params">              ModelAndView model)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">      <span class="comment">// Something to do ?</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterCompletion</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object object,</span></span></span><br><span class="line"><span class="function"><span class="params">              Exception arg3)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">      <span class="comment">// Something to do ?</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Declaration-de-l’interceptor-via-un-bean-de-configuration"><a href="#Declaration-de-l’interceptor-via-un-bean-de-configuration" class="headerlink" title="Déclaration de l’interceptor via un bean de configuration"></a>Déclaration de l’interceptor via un bean de configuration</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebInterceptorConfig</span> <span class="keyword">extends</span> <span class="title">WebMvcConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RequestInterceptor requestInterceptor;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Add custom interceptor</span></span><br><span class="line">        registry.addInterceptor(requestInterceptor);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Le but de ces bouts de code est l’ajout d’un interceptor HTTP dans une application SpringBoot.&lt;/p&gt;
&lt;h2 id=&quot;Creation-de-l’interceptor&quot;&gt;&lt;a </summary>
      
    
    
    
    
    <category term="Java" scheme="https://amouchere.github.io/technical-debt/tags/Java/"/>
    
    <category term="SPRING" scheme="https://amouchere.github.io/technical-debt/tags/SPRING/"/>
    
  </entry>
  
  <entry>
    <title>KeeCracker</title>
    <link href="https://amouchere.github.io/technical-debt/2018/01/28/keecracker/"/>
    <id>https://amouchere.github.io/technical-debt/2018/01/28/keecracker/</id>
    <published>2018-01-28T14:54:05.000Z</published>
    <updated>2022-08-03T21:19:53.611Z</updated>
    
    <content type="html"><![CDATA[<p>Pour (re)trouver le mot de passe d’un keypass par une simple attaque de type force brute.</p><ul><li>Télécharger keeCracker at <a href="http://keecracker.mbw.name/">http://keecracker.mbw.name/</a></li><li>Générer un fichier texte de mot de passe candidat</li><li>Exécuter la commande suivante. Le -T4 pour gérer multi-thread.</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;KeeCracker.exe private.kdbx -w words.txt -T4</span><br></pre></td></tr></table></figure><p>Avec ma vieille machine, j’ai assez de CPU pour tenter 174 mots de passe à la seconde.</p><p>Pour générer le fichier de candidat, j’ai utilisé une lib. java qui trouve tous les candidats à partir d’une regex.</p><p>Par exemple:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">PrintWriter writer &#x3D; new PrintWriter(&quot;word.txt&quot;, &quot;UTF-8&quot;);</span><br><span class="line"></span><br><span class="line">String regex &#x3D; &quot;[0-9]&#123;0,4&#125;&quot;;</span><br><span class="line">Generex generex &#x3D; new Generex(regex);</span><br><span class="line">Iterator iterator &#x3D; generex.iterator();</span><br><span class="line">while (iterator.hasNext()) &#123;</span><br><span class="line">    writer.println(iterator.next());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">writer.close();</span><br></pre></td></tr></table></figure><p>Avec la dépendance maven:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.github.mifmif&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;generex&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.0.2&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Pour (re)trouver le mot de passe d’un keypass par une simple attaque de type force brute.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Télécharger keeCracker at &lt;a href=</summary>
      
    
    
    
    
    <category term="Windows" scheme="https://amouchere.github.io/technical-debt/tags/Windows/"/>
    
    <category term="Hacker" scheme="https://amouchere.github.io/technical-debt/tags/Hacker/"/>
    
  </entry>
  
  <entry>
    <title>Liste d&#39;annotation</title>
    <link href="https://amouchere.github.io/technical-debt/2017/09/30/Liste-d-annotation/"/>
    <id>https://amouchere.github.io/technical-debt/2017/09/30/Liste-d-annotation/</id>
    <published>2017-09-30T22:17:41.000Z</published>
    <updated>2022-08-03T21:19:53.611Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Lister les annotations utilisées dans un projet Java</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat **&#x2F;*.java | grep @ | sed &#39;s&#x2F;\(.*\)\(@[A-Za-z]*\)\([( ].*\)&#x2F;\2&#x2F;&#39; | sort -b | sed -e &#39;s&#x2F;^[ \t]*&#x2F;&#x2F;g&#39; | uniq</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;Lister les annotations utilisées dans un projet Java&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;</summary>
      
    
    
    
    
    <category term="Linux" scheme="https://amouchere.github.io/technical-debt/tags/Linux/"/>
    
    <category term="Shell" scheme="https://amouchere.github.io/technical-debt/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>ShedLock</title>
    <link href="https://amouchere.github.io/technical-debt/2017/07/04/shedlock/"/>
    <id>https://amouchere.github.io/technical-debt/2017/07/04/shedlock/</id>
    <published>2017-07-04T10:48:11.000Z</published>
    <updated>2022-08-03T21:19:53.615Z</updated>
    
    <content type="html"><![CDATA[<p>ShedLock s’assure qu’une tâche ne sera éxecutée qu’une seule fois à un instant t.<br>ShedLock utilise des verrous en BDD (mysql, Redis, … ). 1 verrou par tâche ou groupe de tâche.</p><p>Peut-être une alternative à Quartz pour gérer des tâches ordonnancées dans un environnement multi-noeuds.</p><p><a href="https://github.com/lukas-krecan/ShedLock">source</a></p><h3 id="Dependances-jdbc-lock-provider"><a href="#Dependances-jdbc-lock-provider" class="headerlink" title="Dépendances (jdbc lock provider)"></a>Dépendances (jdbc lock provider)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">   &lt;groupId&gt;net.javacrumbs.shedlock&lt;&#x2F;groupId&gt;</span><br><span class="line">   &lt;artifactId&gt;shedlock-spring&lt;&#x2F;artifactId&gt;</span><br><span class="line">   &lt;version&gt;0.12.0&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">   &lt;groupId&gt;net.javacrumbs.shedlock&lt;&#x2F;groupId&gt;</span><br><span class="line">   &lt;artifactId&gt;shedlock-provider-jdbc-template&lt;&#x2F;artifactId&gt;</span><br><span class="line">   &lt;version&gt;0.12.0&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure><h3 id="Tache"><a href="#Tache" class="headerlink" title="Tâche"></a>Tâche</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@Scheduled(fixedRate &#x3D; 6000)</span><br><span class="line">@SchedulerLock(name &#x3D; &quot;scheduledTaskName&quot;)</span><br><span class="line">public void doYourTask() &#123;</span><br><span class="line">  &#x2F;&#x2F; Do your task</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h3><p>fin de lock par défaut: defaultLockAtMostFor</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">@EnableScheduling</span><br><span class="line">@Configuration</span><br><span class="line">public class SchedulerConfiguration &#123;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    public LockProvider lockProvider(DataSource dataSource) &#123;</span><br><span class="line">        return new JdbcTemplateLockProvider(dataSource);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    public ScheduledLockConfiguration taskScheduler(LockProvider lockProvider) &#123;</span><br><span class="line">        return ScheduledLockConfigurationBuilder</span><br><span class="line">                .withLockProvider(lockProvider)</span><br><span class="line">                .withPoolSize(10)</span><br><span class="line">                .withDefaultLockAtMostFor(Duration.ofMinutes(1))</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Projet de test (SpringBoot/Docker): <a href="https://github.com/amouchere/shedlockDemo">https://github.com/amouchere/shedlockDemo</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;ShedLock s’assure qu’une tâche ne sera éxecutée qu’une seule fois à un instant t.&lt;br&gt;ShedLock utilise des verrous en BDD (mysql, Redis, …</summary>
      
    
    
    
    
    <category term="Java" scheme="https://amouchere.github.io/technical-debt/tags/Java/"/>
    
    <category term="SPRING" scheme="https://amouchere.github.io/technical-debt/tags/SPRING/"/>
    
  </entry>
  
  <entry>
    <title>JGitFlow</title>
    <link href="https://amouchere.github.io/technical-debt/2017/05/12/JGitFlow/"/>
    <id>https://amouchere.github.io/technical-debt/2017/05/12/JGitFlow/</id>
    <published>2017-05-12T14:07:30.000Z</published>
    <updated>2022-08-03T21:19:53.611Z</updated>
    
    <content type="html"><![CDATA[<p>Le plugin maven <tt>jgit-flow</tt> est utilisé afin de simplifier au maximum la création d’une ‘’release’’ pour un module autonome :</p><ul><li><tt>release-start</tt> :<ul><li>création d’une branche de stabilisation (‘’release’’) pour une version donnée</li><li>montée en version mineure de la branche <tt>develop</tt> ;</li></ul></li><li><tt>release-finish</tt> : finalisation de la ‘’release’’ :<ul><li>suppression du suffix <tt>-SNAPSHOT</tt>,</li><li>merge sur <tt>master</tt></li><li>création du tag</li></ul></li></ul><h1 id="Prerequis"><a href="#Prerequis" class="headerlink" title="Prérequis"></a>Prérequis</h1><ul><li>Vérifier que le pom.xml contient la configuration suivante :<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>external.atlassian.jgitflow<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jgitflow-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-m5.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">flowInitContext</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">masterBranchName</span>&gt;</span>master<span class="tag">&lt;/<span class="name">masterBranchName</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">developBranchName</span>&gt;</span>develop<span class="tag">&lt;/<span class="name">developBranchName</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">versionTagPrefix</span>&gt;</span>v-<span class="tag">&lt;/<span class="name">versionTagPrefix</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">flowInitContext</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">noDeploy</span>&gt;</span>true<span class="tag">&lt;/<span class="name">noDeploy</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">squash</span>&gt;</span>false<span class="tag">&lt;/<span class="name">squash</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">scmCommentPrefix</span>&gt;</span>[RELEASE] <span class="tag">&lt;/<span class="name">scmCommentPrefix</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">useReleaseProfile</span>&gt;</span>false<span class="tag">&lt;/<span class="name">useReleaseProfile</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>Avoir les branches locales <tt>develop</tt> et <tt>master</tt> à jour.</li></ul><h1 id="Demarrage-de-la-‘’release’’"><a href="#Demarrage-de-la-‘’release’’" class="headerlink" title="Démarrage de la ‘’release’’"></a>Démarrage de la ‘’release’’</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn jgitflow:release-start</span><br></pre></td></tr></table></figure><h1 id="Finalisation-de-la-‘’release’’"><a href="#Finalisation-de-la-‘’release’’" class="headerlink" title="Finalisation de la ‘’release’’"></a>Finalisation de la ‘’release’’</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn jgitflow:release-finish</span><br></pre></td></tr></table></figure><p>Puis, pousser les branches <tt>master</tt> et <tt>develop</tt> et les tags</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br><span class="line">git push origin develop</span><br><span class="line">git push --tags</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Le plugin maven &lt;tt&gt;jgit-flow&lt;/tt&gt; est utilisé afin de simplifier au maximum la création d’une ‘’release’’ pour un module autonome :&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="Git" scheme="https://amouchere.github.io/technical-debt/tags/Git/"/>
    
    <category term="Maven" scheme="https://amouchere.github.io/technical-debt/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>Création dynamique d&#39;un logger</title>
    <link href="https://amouchere.github.io/technical-debt/2017/02/21/dynamicLogger/"/>
    <id>https://amouchere.github.io/technical-debt/2017/02/21/dynamicLogger/</id>
    <published>2017-02-21T09:20:48.000Z</published>
    <updated>2022-08-03T21:19:53.611Z</updated>
    
    <content type="html"><![CDATA[<p>How to create a logback logger by the code:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DynamicLogger</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> LoggerContext context = (LoggerContext) LoggerFactory.getILoggerFactory();</span><br><span class="line"></span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Logger <span class="title">createSpecificLogger</span><span class="params">(<span class="keyword">final</span> String fileName, <span class="keyword">final</span> String loggingPath)</span> </span>&#123;</span><br><span class="line">        Logger logger = context.getLogger(<span class="string">&quot;dynamic_logger_&quot;</span> + fileName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Don&#x27;t inherit root appender</span></span><br><span class="line">        logger.setAdditive(<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">        FileAppender fileAppender = <span class="keyword">new</span> FileAppender();</span><br><span class="line">        fileAppender.setContext(context);</span><br><span class="line">        fileAppender.setName(<span class="string">&quot;dynamic_logger_fileAppender_&quot;</span> + fileName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Optional</span></span><br><span class="line">        fileAppender.setFile(loggingPath + <span class="string">&quot;/&quot;</span> + fileName + <span class="string">&quot;.log&quot;</span>);</span><br><span class="line">        fileAppender.setAppend(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// set up pattern encoder</span></span><br><span class="line">        PatternLayoutEncoder encoder = <span class="keyword">new</span> PatternLayoutEncoder();</span><br><span class="line">        encoder.setContext(context);</span><br><span class="line">        encoder.setPattern(<span class="string">&quot;%d&#123;dd-MM-yyyy HH:mm:ss,SSS&#125; - %p | %m%n&quot;</span>);</span><br><span class="line">        encoder.start();</span><br><span class="line"></span><br><span class="line">        fileAppender.setEncoder(encoder);</span><br><span class="line">        fileAppender.start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Attach appender to logger</span></span><br><span class="line">        logger.addAppender(fileAppender);</span><br><span class="line">        logger.setLevel(Level.TRACE);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;How to create a logback logger by the code:&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/s</summary>
      
    
    
    
    
    <category term="java" scheme="https://amouchere.github.io/technical-debt/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Vérifier l&#39;autoincrément en MySQL</title>
    <link href="https://amouchere.github.io/technical-debt/2017/01/19/autoincrement-MySQL/"/>
    <id>https://amouchere.github.io/technical-debt/2017/01/19/autoincrement-MySQL/</id>
    <published>2017-01-19T11:57:28.000Z</published>
    <updated>2022-08-03T21:19:53.611Z</updated>
    
    <content type="html"><![CDATA[<p>Sur une base de donnée MySQL, pour identifier le type de colonne auto-incrémentée et vérifier la valeur courant de l’incrément. </p><p>Utile pour vérifier si le seuil maximal du champ est bientôt atteint. </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">  t.TABLE_SCHEMA,</span><br><span class="line">  t.TABLE_NAME,</span><br><span class="line">  t.AUTO_INCREMENT,</span><br><span class="line">  c.COLUMN_TYPE</span><br><span class="line"><span class="keyword">from</span> INFORMATION_SCHEMA.tables t, INFORMATION_SCHEMA.columns c</span><br><span class="line"><span class="keyword">where</span> t.TABLE_SCHEMA = c.TABLE_SCHEMA</span><br><span class="line">      <span class="keyword">and</span> t.TABLE_NAME = c.TABLE_NAME</span><br><span class="line">      <span class="keyword">and</span> t.AUTO_INCREMENT <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span></span><br><span class="line">      <span class="keyword">and</span> t.TABLE_SCHEMA <span class="keyword">like</span> <span class="string">&#x27;%&#x27;</span></span><br><span class="line">      <span class="keyword">and</span> c.TABLE_SCHEMA <span class="keyword">like</span> <span class="string">&#x27;%&#x27;</span></span><br><span class="line">      <span class="keyword">and</span> extra <span class="keyword">like</span> <span class="string">&#x27;%auto_increment%&#x27;</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">CONCAT_WS</span>(<span class="string">&#x27;.&#x27;</span>, t.table_schema, t.TABLE_NAME) <span class="keyword">asc</span>;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Retrouver la valeur de l&#39;autoincrément en MYSQL</summary>
    
    
    
    
    <category term="SQL" scheme="https://amouchere.github.io/technical-debt/tags/SQL/"/>
    
    <category term="MySQL" scheme="https://amouchere.github.io/technical-debt/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Metrics for spring</title>
    <link href="https://amouchere.github.io/technical-debt/2017/01/11/Metrics-for-spring/"/>
    <id>https://amouchere.github.io/technical-debt/2017/01/11/Metrics-for-spring/</id>
    <published>2017-01-11T14:13:05.000Z</published>
    <updated>2022-08-03T21:19:53.611Z</updated>
    
    <content type="html"><![CDATA[<p>Add this dependency to the SpringBoot project.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-actuator&lt;&#x2F;artifactId&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.ryantenney.metrics&lt;&#x2F;groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;metrics-spring&lt;&#x2F;artifactId&gt;</span><br><span class="line">    &lt;version&gt;3.1.3&lt;&#x2F;version&gt;</span><br><span class="line">&lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Activate the metrics in java config :</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableMetrics</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MetricsConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Annotate the function to monitor with @Timed</p><p>Explore the metrics with api :<br><a href="http://localhost:8091/metrics">http://localhost:8091/metrics</a></p><p>–&gt; Official doc : <a href="https://github.com/ryantenney/metrics-spring">https://github.com/ryantenney/metrics-spring</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Add this dependency to the SpringBoot project.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;</summary>
      
    
    
    
    
    <category term="Java" scheme="https://amouchere.github.io/technical-debt/tags/Java/"/>
    
    <category term="SPRING" scheme="https://amouchere.github.io/technical-debt/tags/SPRING/"/>
    
  </entry>
  
  <entry>
    <title>Docker Tips</title>
    <link href="https://amouchere.github.io/technical-debt/2016/12/16/dockerTips/"/>
    <id>https://amouchere.github.io/technical-debt/2016/12/16/dockerTips/</id>
    <published>2016-12-16T17:51:46.000Z</published>
    <updated>2022-08-03T21:19:53.611Z</updated>
    
    <content type="html"><![CDATA[<p>To remove all existing containers (not images!) run</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">docker rm $(docker ps -aq)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>To remove all images</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">docker rmi $(docker images -q)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;To remove all existing containers (not images!) run&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;li</summary>
      
    
    
    
    
    <category term="Docker" scheme="https://amouchere.github.io/technical-debt/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Création d&#39;un service System D avec auto restart</title>
    <link href="https://amouchere.github.io/technical-debt/2016/09/27/system-v-service/"/>
    <id>https://amouchere.github.io/technical-debt/2016/09/27/system-v-service/</id>
    <published>2016-09-27T21:18:36.000Z</published>
    <updated>2022-08-03T21:19:53.615Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Suppression du service System V (créé par la commande <em>sudo apt-get install tomcat8</em> ) :</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo update-rc.d tomcat8 remove</span><br><span class="line">sudo rm &#x2F;etc&#x2F;init.d&#x2F;tomcat8</span><br></pre></td></tr></table></figure><ul><li>Création d’un service System D:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nano &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;tomcat.service</span><br></pre></td></tr></table></figure><ul><li>Compléter le script:</li></ul><pre><code>[Unit]Description=Apache Tomcat Web Application ContainerAfter=network.target[Service]Type=forkingEnvironment=JAVA_HOME=/usr/lib/jvm/default-javaEnvironment=CATALINA_PID=/opt/tomcat/temp/tomcat.pidEnvironment=CATALINA_HOME=/usr/share/tomcat8Environment=CATALINA_BASE=/var/lib/tomcat8Environment=&#39;CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC&#39;Environment=&#39;JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom&#39;ExecStart=/usr/share/tomcat8/bin/startup.shExecStop=/usr/share/tomcat8/bin/shutdown.shUser=tomcat8Group=tomcat8RestartSec=10Restart=always[Install]WantedBy=multi-user.target</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;Suppression du service System V (créé par la commande &lt;em&gt;sudo apt-get install tomcat8&lt;/em&gt; ) :&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight</summary>
      
    
    
    
    
    <category term="Linux" scheme="https://amouchere.github.io/technical-debt/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Test de débit sur le réseau</title>
    <link href="https://amouchere.github.io/technical-debt/2016/09/22/testDuReseau/"/>
    <id>https://amouchere.github.io/technical-debt/2016/09/22/testDuReseau/</id>
    <published>2016-09-22T20:43:46.000Z</published>
    <updated>2022-08-03T21:19:53.615Z</updated>
    
    <content type="html"><![CDATA[<p>Coté serveur</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iperf -s</span><br></pre></td></tr></table></figure><p>Coté client pour un test de 10 secondes (par défaut)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iperf -c 192.168.0.21</span><br></pre></td></tr></table></figure><p>Coté client pour un test de 30 secondes</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iperf -c 192.168.0.21 -t30</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Coté serveur&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;c</summary>
      
    
    
    
    
    <category term="Linux" scheme="https://amouchere.github.io/technical-debt/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu: third party apps installation</title>
    <link href="https://amouchere.github.io/technical-debt/2016/09/05/Ubuntu-third-party-apps-installation/"/>
    <id>https://amouchere.github.io/technical-debt/2016/09/05/Ubuntu-third-party-apps-installation/</id>
    <published>2016-09-05T13:29:53.000Z</published>
    <updated>2022-08-03T21:19:53.611Z</updated>
    
    <content type="html"><![CDATA[<p>cd /Downloads</p><p>sudo dpkg -i awesome_new_app.deb</p><p>sudo apt-get -f install</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;cd /Downloads&lt;/p&gt;
&lt;p&gt;sudo dpkg -i awesome_new_app.deb&lt;/p&gt;
&lt;p&gt;sudo apt-get -f install&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="Linux" scheme="https://amouchere.github.io/technical-debt/tags/Linux/"/>
    
  </entry>
  
</feed>
